---
--- mysql insert select
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jirry.
--- DateTime: 2019/7/5 15:59
---

local mysql = require("resty.mysql")

-- mysql 配置
local timeout = 1000
local pool_max_idle_timeout = 10000      -- 连接池连接最大空闲时间; (单位: ms毫秒)
local pool_size = 100   -- 连接池大小
local db_config = {
    host = '192.168.134.215',
    port = 3306,
    user = "root",
    password = "123456",
    database = "test"
}

-- mysql 关闭连接
local function close_db(db)
    if not db then
        return
    end

    -- 关闭连接
    -- local ok, err = db:close()
    local ok, err = db:set_keepalive(pool_max_idle_timeout, pool_size)
    if not ok then
        ngx.say("mysql close error: ", err)
    end
end

-- mysql 客户端
local db, err = mysql:new()
if not db then
    ngx.say("new mysql error: ", err)
end

-- 设置连接超时
db:set_timeout(timeout)

-- 连接mysql
local res, err, errno, sqlstate = db:connect(db_config)
if not res then
    ngx.say("connect to mysql error: ", err, ", error: ", errno, ", sqlstate: ", sqlstate)
    return close_db(db)
end

-- 删除表
local drop_table_sql = 'DROP TABLE IF EXISTS test'
res, err, errno, sqlstate = db:query(drop_table_sql)
if not res then
    ngx.say("drop table error: ", err, ", error: ", errno, ", sqlstate: ", sqlstate)
    return close_db(db)
end

-- 创建表
local create_table_sql = 'CREATE TABLE test(id int primary key auto_increment, ch varchar(100))'
res, err, errno, sqlstate = db:query(create_table_sql)
if not res then
    ngx.say("create table error: ", err, ", error: ", errno, ", sqlstate: ", sqlstate)
    return close_db(db)
end

-- 插入数据
local insert_row_sql = "INSERT INTO test (ch) values ('test')"
res, err, errno, sqlstate = db:query(insert_row_sql)
if not res then
    ngx.say("insert error: ", err, ", error: ", errno, ", sqlstate: ", sqlstate)
    return close_db(db)
end

-- 查询数据
local query_sql = "SELECT * FROM test"
res, err, errno, sqlstate = db:query(query_sql)
if not res then
    ngx.say("insert error: ", err, ", error: ", errno, ", sqlstate: ", sqlstate)
    return close_db(db)
end

-- 遍历数据
for i, row in ipairs(res) do
    for name, value in pairs(row) do
        ngx.say(i, ":", name, "=", value, "<br/>")
    end
end
